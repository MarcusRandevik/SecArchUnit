import groovy.io.FileType

import java.util.regex.Pattern

final String archunitExamplesGitRepo = 'git@github.com:TNG/ArchUnit-Examples.git'
final File checkoutDir = new File(project.buildDir, 'example-update')
final List<String> exampleFolders = ['example-plain', 'example-junit4', 'example-junit5']

task checkoutArchUnitExample {
    doLast {
        gitCheckOut(archunitExamplesGitRepo, checkoutDir)
    }
}

task copyArchUnitExampleSrc(dependsOn: checkoutArchUnitExample) {
    doLast {
        exampleFolders.each { exampleFolder ->
            def targetSource = new File(new File(checkoutDir, exampleFolder), 'src')
            targetSource.deleteDir()
            copy {
                from new File(project(':archunit-example:example-plain').projectDir, 'src/main')
                into new File(targetSource, 'main')
            }
            copy {
                from new File(project(":archunit-example:${exampleFolder}").projectDir, 'src/test')
                into new File(targetSource, 'test')
            }
        }
    }
}

def removeLines = { File file, List<String> linesToRemove ->
    def regex = "(${linesToRemove.collect { Pattern.quote(it) }.join('|')})\n"
    file.text = file.text.replaceAll(regex, '')
}

def removeExampleCategory = { File baseDir, String categoryFqn ->
    new File(baseDir, "src/test/java/${categoryFqn.replace('.', '/')}.java").delete()

    new File(baseDir, 'src').traverse(type: FileType.FILES, nameFilter: { it.endsWith('.java') }) { File file ->
        removeLines(file, [
                '@Category(Example.class)',
                'import org.junit.experimental.categories.Category;',
                "import ${categoryFqn};"
        ])
    }
}

def removeExampleTag = { File baseDir ->
    new File(baseDir, 'src').traverse(type: FileType.FILES, nameFilter: { it.endsWith('.java') }) { File file ->
        removeLines(file, [
                '@ArchTag("example")',
                'import com.tngtech.archunit.junit.ArchTag;'
        ])
    }
}

task removeArchUnitExampleCategory(dependsOn: copyArchUnitExampleSrc) {
    doLast {
        removeExampleCategory(new File(checkoutDir, 'example-plain'), 'com.tngtech.archunit.exampletest.Example')
        removeExampleCategory(new File(checkoutDir, 'example-junit4'), 'com.tngtech.archunit.exampletest.junit4.Example')
        removeExampleTag(new File(checkoutDir, 'example-junit5'))
    }
}

task updateArchUnitExampleVersion(dependsOn: checkoutArchUnitExample) {
    doLast {
        exampleFolders.each { exampleFolder ->
            def buildFile = new File(new File(checkoutDir, exampleFolder), 'build.gradle')
            buildFile.text = buildFile.text.replaceAll(/(com\.tngtech\.archunit:archunit[^:]*:)[\d.]*/, "\$1${version}")
        }
    }
}

task updateArchUnitExample(dependsOn: [
        checkoutArchUnitExample,
        updateArchUnitExampleVersion,
        copyArchUnitExampleSrc,
        removeArchUnitExampleCategory]) {

    ext.checkoutDir = checkoutDir
}
